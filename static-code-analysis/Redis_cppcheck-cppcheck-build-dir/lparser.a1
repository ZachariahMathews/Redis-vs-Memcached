<?xml version="1.0"?>
<analyzerinfo checksum="4165536283">
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;if(fs)&apos; is redundant or there is possible null pointer dereference: fs." verbose="Either the condition &apos;if(fs)&apos; is redundant or there is possible null pointer dereference: fs." cwe="476">
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" line="359" info="Null pointer dereference"/>
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" line="378" info="Assuming that condition &apos;if(fs)&apos; is not redundant"/>
            <symbol>fs</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;if(fs)&apos; is redundant or there is possible null pointer dereference: fs." verbose="Either the condition &apos;if(fs)&apos; is redundant or there is possible null pointer dereference: fs." cwe="476">
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" line="362" info="Null pointer dereference"/>
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" line="378" info="Assuming that condition &apos;if(fs)&apos; is not redundant"/>
            <symbol>fs</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;if(fs)&apos; is redundant or there is possible null pointer dereference: fs." verbose="Either the condition &apos;if(fs)&apos; is redundant or there is possible null pointer dereference: fs." cwe="476">
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" line="363" info="Null pointer dereference"/>
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" line="378" info="Assuming that condition &apos;if(fs)&apos; is not redundant"/>
            <symbol>fs</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;if(fs)&apos; is redundant or there is possible null pointer dereference: fs." verbose="Either the condition &apos;if(fs)&apos; is redundant or there is possible null pointer dereference: fs." cwe="476">
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" line="364" info="Null pointer dereference"/>
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" line="378" info="Assuming that condition &apos;if(fs)&apos; is not redundant"/>
            <symbol>fs</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;if(fs)&apos; is redundant or there is possible null pointer dereference: fs." verbose="Either the condition &apos;if(fs)&apos; is redundant or there is possible null pointer dereference: fs." cwe="476">
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" line="365" info="Null pointer dereference"/>
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" line="378" info="Assuming that condition &apos;if(fs)&apos; is not redundant"/>
            <symbol>fs</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;if(fs)&apos; is redundant or there is possible null pointer dereference: fs." verbose="Either the condition &apos;if(fs)&apos; is redundant or there is possible null pointer dereference: fs." cwe="476">
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" line="366" info="Null pointer dereference"/>
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" line="378" info="Assuming that condition &apos;if(fs)&apos; is not redundant"/>
            <symbol>fs</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;if(fs)&apos; is redundant or there is possible null pointer dereference: fs." verbose="Either the condition &apos;if(fs)&apos; is redundant or there is possible null pointer dereference: fs." cwe="476">
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" line="367" info="Null pointer dereference"/>
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" line="378" info="Assuming that condition &apos;if(fs)&apos; is not redundant"/>
            <symbol>fs</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;if(fs)&apos; is redundant or there is possible null pointer dereference: fs." verbose="Either the condition &apos;if(fs)&apos; is redundant or there is possible null pointer dereference: fs." cwe="476">
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" line="368" info="Null pointer dereference"/>
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" line="378" info="Assuming that condition &apos;if(fs)&apos; is not redundant"/>
            <symbol>fs</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;if(fs)&apos; is redundant or there is possible null pointer dereference: fs." verbose="Either the condition &apos;if(fs)&apos; is redundant or there is possible null pointer dereference: fs." cwe="476">
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" line="369" info="Null pointer dereference"/>
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" line="378" info="Assuming that condition &apos;if(fs)&apos; is not redundant"/>
            <symbol>fs</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;if(fs)&apos; is redundant or there is possible null pointer dereference: fs." verbose="Either the condition &apos;if(fs)&apos; is redundant or there is possible null pointer dereference: fs." cwe="476">
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" line="370" info="Null pointer dereference"/>
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" line="378" info="Assuming that condition &apos;if(fs)&apos; is not redundant"/>
            <symbol>fs</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;if(fs)&apos; is redundant or there is possible null pointer dereference: fs." verbose="Either the condition &apos;if(fs)&apos; is redundant or there is possible null pointer dereference: fs." cwe="476">
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" line="371" info="Null pointer dereference"/>
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" line="378" info="Assuming that condition &apos;if(fs)&apos; is not redundant"/>
            <symbol>fs</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;if(fs)&apos; is redundant or there is possible null pointer dereference: fs." verbose="Either the condition &apos;if(fs)&apos; is redundant or there is possible null pointer dereference: fs." cwe="476">
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" line="376" info="Null pointer dereference"/>
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lparser.c" line="378" info="Assuming that condition &apos;if(fs)&apos; is not redundant"/>
            <symbol>fs</symbol>
        </error>
  <FileInfo check="Bounds checking">
    <ArraySize array="luaP_opmodes" size="38"/>
    <ArraySize array="luaP_opnames" size="39"/>
  </FileInfo>
  <FileInfo check="Bounds checking">
    <ArraySize array="luaP_opmodes" size="38"/>
    <ArraySize array="luaP_opnames" size="39"/>
  </FileInfo>
  <FileInfo check="Bounds checking">
    <ArraySize array="luaP_opmodes" size="38"/>
    <ArraySize array="luaP_opnames" size="39"/>
  </FileInfo>
  <FileInfo check="Bounds checking">
    <ArraySize array="luaP_opmodes" size="38"/>
    <ArraySize array="luaP_opnames" size="39"/>
  </FileInfo>
        <error id="preprocessorErrorDirective" severity="error" msg="No header in #include" verbose="No header in #include">
            <location file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lua.h" line="94"/>
        </error>
  <FileInfo check="Bounds checking">
    <ArraySize array="luaP_opmodes" size="38"/>
    <ArraySize array="luaP_opnames" size="39"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="anchor_token" lineNumber="57"/>
    <functiondecl functionName="error_expected" lineNumber="65"/>
    <functiondecl functionName="errorlimit" lineNumber="71"/>
    <functiondecl functionName="testnext" lineNumber="80"/>
    <functiondecl functionName="check" lineNumber="89"/>
    <functiondecl functionName="checknext" lineNumber="94"/>
    <functiondecl functionName="check_match" lineNumber="104"/>
    <functiondecl functionName="str_checkname" lineNumber="117"/>
    <functiondecl functionName="init_exp" lineNumber="126"/>
    <functiondecl functionName="codestring" lineNumber="133"/>
    <functiondecl functionName="checkname" lineNumber="138"/>
    <functiondecl functionName="registerlocalvar" lineNumber="143"/>
    <functiondecl functionName="new_localvar" lineNumber="160"/>
    <functiondecl functionName="adjustlocalvars" lineNumber="167"/>
    <functiondecl functionName="removevars" lineNumber="176"/>
    <functiondecl functionName="indexupvalue" lineNumber="183"/>
    <functiondecl functionName="searchvar" lineNumber="207"/>
    <functiondecl functionName="markupval" lineNumber="217"/>
    <functiondecl functionName="singlevaraux" lineNumber="224"/>
    <functiondecl functionName="singlevar" lineNumber="248"/>
    <functiondecl functionName="adjust_assign" lineNumber="256"/>
    <functiondecl functionName="enterlevel" lineNumber="276"/>
    <functiondecl functionName="enterblock" lineNumber="285"/>
    <functiondecl functionName="leaveblock" lineNumber="296"/>
    <functiondecl functionName="pushclosure" lineNumber="310"/>
    <functiondecl functionName="open_func" lineNumber="328"/>
    <functiondecl functionName="close_func" lineNumber="356"/>
    <functiondecl functionName="luaY_parser" lineNumber="383"/>
    <functiondecl functionName="field" lineNumber="407"/>
    <functiondecl functionName="yindex" lineNumber="418"/>
    <functiondecl functionName="recfield" lineNumber="443"/>
    <functiondecl functionName="closelistfield" lineNumber="464"/>
    <functiondecl functionName="lastlistfield" lineNumber="475"/>
    <functiondecl functionName="listfield" lineNumber="490"/>
    <functiondecl functionName="constructor" lineNumber="498"/>
    <functiondecl functionName="parlist" lineNumber="543"/>
    <functiondecl functionName="body" lineNumber="576"/>
    <functiondecl functionName="explist1" lineNumber="596"/>
    <functiondecl functionName="funcargs" lineNumber="609"/>
    <functiondecl functionName="prefixexp" lineNumber="667"/>
    <functiondecl functionName="primaryexp" lineNumber="690"/>
    <functiondecl functionName="simpleexp" lineNumber="727"/>
    <functiondecl functionName="getunopr" lineNumber="778"/>
    <functiondecl functionName="getbinopr" lineNumber="788"/>
    <functiondecl functionName="subexpr" lineNumber="828"/>
    <functiondecl functionName="expr" lineNumber="856"/>
    <functiondecl functionName="block_follow" lineNumber="871"/>
    <functiondecl functionName="block" lineNumber="881"/>
    <functiondecl functionName="check_conflict" lineNumber="908"/>
    <functiondecl functionName="assignment" lineNumber="931"/>
    <functiondecl functionName="cond" lineNumber="965"/>
    <functiondecl functionName="breakstat" lineNumber="975"/>
    <functiondecl functionName="whilestat" lineNumber="991"/>
    <functiondecl functionName="repeatstat" lineNumber="1010"/>
    <functiondecl functionName="exp1" lineNumber="1036"/>
    <functiondecl functionName="forbody" lineNumber="1046"/>
    <functiondecl functionName="fornum" lineNumber="1067"/>
    <functiondecl functionName="forlist" lineNumber="1089"/>
    <functiondecl functionName="forstat" lineNumber="1112"/>
    <functiondecl functionName="test_then_block" lineNumber="1130"/>
    <functiondecl functionName="ifstat" lineNumber="1141"/>
    <functiondecl functionName="localfunc" lineNumber="1165"/>
    <functiondecl functionName="localstat" lineNumber="1179"/>
    <functiondecl functionName="funcname" lineNumber="1198"/>
    <functiondecl functionName="funcstat" lineNumber="1212"/>
    <functiondecl functionName="exprstat" lineNumber="1224"/>
    <functiondecl functionName="retstat" lineNumber="1238"/>
    <functiondecl functionName="statement" lineNumber="1271"/>
    <functiondecl functionName="chunk" lineNumber="1325"/>
    <functiondecl functionName="anchor_token" lineNumber="57"/>
    <functiondecl functionName="error_expected" lineNumber="65"/>
    <functiondecl functionName="errorlimit" lineNumber="71"/>
    <functiondecl functionName="testnext" lineNumber="80"/>
    <functiondecl functionName="check" lineNumber="89"/>
    <functiondecl functionName="checknext" lineNumber="94"/>
    <functiondecl functionName="check_match" lineNumber="104"/>
    <functiondecl functionName="str_checkname" lineNumber="117"/>
    <functiondecl functionName="init_exp" lineNumber="126"/>
    <functiondecl functionName="codestring" lineNumber="133"/>
    <functiondecl functionName="checkname" lineNumber="138"/>
    <functiondecl functionName="registerlocalvar" lineNumber="143"/>
    <functiondecl functionName="new_localvar" lineNumber="160"/>
    <functiondecl functionName="adjustlocalvars" lineNumber="167"/>
    <functiondecl functionName="removevars" lineNumber="176"/>
    <functiondecl functionName="indexupvalue" lineNumber="183"/>
    <functiondecl functionName="searchvar" lineNumber="207"/>
    <functiondecl functionName="markupval" lineNumber="217"/>
    <functiondecl functionName="singlevaraux" lineNumber="224"/>
    <functiondecl functionName="singlevar" lineNumber="248"/>
    <functiondecl functionName="adjust_assign" lineNumber="256"/>
    <functiondecl functionName="enterlevel" lineNumber="276"/>
    <functiondecl functionName="enterblock" lineNumber="285"/>
    <functiondecl functionName="leaveblock" lineNumber="296"/>
    <functiondecl functionName="pushclosure" lineNumber="310"/>
    <functiondecl functionName="open_func" lineNumber="328"/>
    <functiondecl functionName="close_func" lineNumber="356"/>
    <functiondecl functionName="luaY_parser" lineNumber="383"/>
    <functiondecl functionName="field" lineNumber="407"/>
    <functiondecl functionName="yindex" lineNumber="418"/>
    <functiondecl functionName="recfield" lineNumber="443"/>
    <functiondecl functionName="closelistfield" lineNumber="464"/>
    <functiondecl functionName="lastlistfield" lineNumber="475"/>
    <functiondecl functionName="listfield" lineNumber="490"/>
    <functiondecl functionName="constructor" lineNumber="498"/>
    <functiondecl functionName="parlist" lineNumber="543"/>
    <functiondecl functionName="body" lineNumber="576"/>
    <functiondecl functionName="explist1" lineNumber="596"/>
    <functiondecl functionName="funcargs" lineNumber="609"/>
    <functiondecl functionName="prefixexp" lineNumber="667"/>
    <functiondecl functionName="primaryexp" lineNumber="690"/>
    <functiondecl functionName="simpleexp" lineNumber="727"/>
    <functiondecl functionName="getunopr" lineNumber="778"/>
    <functiondecl functionName="getbinopr" lineNumber="788"/>
    <functiondecl functionName="subexpr" lineNumber="828"/>
    <functiondecl functionName="expr" lineNumber="856"/>
    <functiondecl functionName="block_follow" lineNumber="871"/>
    <functiondecl functionName="block" lineNumber="881"/>
    <functiondecl functionName="check_conflict" lineNumber="908"/>
    <functiondecl functionName="assignment" lineNumber="931"/>
    <functiondecl functionName="cond" lineNumber="965"/>
    <functiondecl functionName="breakstat" lineNumber="975"/>
    <functiondecl functionName="whilestat" lineNumber="991"/>
    <functiondecl functionName="repeatstat" lineNumber="1010"/>
    <functiondecl functionName="exp1" lineNumber="1036"/>
    <functiondecl functionName="forbody" lineNumber="1046"/>
    <functiondecl functionName="fornum" lineNumber="1067"/>
    <functiondecl functionName="forlist" lineNumber="1089"/>
    <functiondecl functionName="forstat" lineNumber="1112"/>
    <functiondecl functionName="test_then_block" lineNumber="1130"/>
    <functiondecl functionName="ifstat" lineNumber="1141"/>
    <functiondecl functionName="localfunc" lineNumber="1165"/>
    <functiondecl functionName="localstat" lineNumber="1179"/>
    <functiondecl functionName="funcname" lineNumber="1198"/>
    <functiondecl functionName="funcstat" lineNumber="1212"/>
    <functiondecl functionName="exprstat" lineNumber="1224"/>
    <functiondecl functionName="retstat" lineNumber="1238"/>
    <functiondecl functionName="statement" lineNumber="1271"/>
    <functiondecl functionName="chunk" lineNumber="1325"/>
    <functiondecl functionName="anchor_token" lineNumber="57"/>
    <functiondecl functionName="error_expected" lineNumber="65"/>
    <functiondecl functionName="errorlimit" lineNumber="71"/>
    <functiondecl functionName="testnext" lineNumber="80"/>
    <functiondecl functionName="check" lineNumber="89"/>
    <functiondecl functionName="checknext" lineNumber="94"/>
    <functiondecl functionName="check_match" lineNumber="104"/>
    <functiondecl functionName="str_checkname" lineNumber="117"/>
    <functiondecl functionName="init_exp" lineNumber="126"/>
    <functiondecl functionName="codestring" lineNumber="133"/>
    <functiondecl functionName="checkname" lineNumber="138"/>
    <functiondecl functionName="registerlocalvar" lineNumber="143"/>
    <functiondecl functionName="new_localvar" lineNumber="160"/>
    <functiondecl functionName="adjustlocalvars" lineNumber="167"/>
    <functiondecl functionName="removevars" lineNumber="176"/>
    <functiondecl functionName="indexupvalue" lineNumber="183"/>
    <functiondecl functionName="searchvar" lineNumber="207"/>
    <functiondecl functionName="markupval" lineNumber="217"/>
    <functiondecl functionName="singlevaraux" lineNumber="224"/>
    <functiondecl functionName="singlevar" lineNumber="248"/>
    <functiondecl functionName="adjust_assign" lineNumber="256"/>
    <functiondecl functionName="enterlevel" lineNumber="276"/>
    <functiondecl functionName="enterblock" lineNumber="285"/>
    <functiondecl functionName="leaveblock" lineNumber="296"/>
    <functiondecl functionName="pushclosure" lineNumber="310"/>
    <functiondecl functionName="open_func" lineNumber="328"/>
    <functiondecl functionName="close_func" lineNumber="356"/>
    <functiondecl functionName="luaY_parser" lineNumber="383"/>
    <functiondecl functionName="field" lineNumber="407"/>
    <functiondecl functionName="yindex" lineNumber="418"/>
    <functiondecl functionName="recfield" lineNumber="443"/>
    <functiondecl functionName="closelistfield" lineNumber="464"/>
    <functiondecl functionName="lastlistfield" lineNumber="475"/>
    <functiondecl functionName="listfield" lineNumber="490"/>
    <functiondecl functionName="constructor" lineNumber="498"/>
    <functiondecl functionName="parlist" lineNumber="543"/>
    <functiondecl functionName="body" lineNumber="576"/>
    <functiondecl functionName="explist1" lineNumber="596"/>
    <functiondecl functionName="funcargs" lineNumber="609"/>
    <functiondecl functionName="prefixexp" lineNumber="667"/>
    <functiondecl functionName="primaryexp" lineNumber="690"/>
    <functiondecl functionName="simpleexp" lineNumber="727"/>
    <functiondecl functionName="getunopr" lineNumber="778"/>
    <functiondecl functionName="getbinopr" lineNumber="788"/>
    <functiondecl functionName="subexpr" lineNumber="828"/>
    <functiondecl functionName="expr" lineNumber="856"/>
    <functiondecl functionName="block_follow" lineNumber="871"/>
    <functiondecl functionName="block" lineNumber="881"/>
    <functiondecl functionName="check_conflict" lineNumber="908"/>
    <functiondecl functionName="assignment" lineNumber="931"/>
    <functiondecl functionName="cond" lineNumber="965"/>
    <functiondecl functionName="breakstat" lineNumber="975"/>
    <functiondecl functionName="whilestat" lineNumber="991"/>
    <functiondecl functionName="repeatstat" lineNumber="1010"/>
    <functiondecl functionName="exp1" lineNumber="1036"/>
    <functiondecl functionName="forbody" lineNumber="1046"/>
    <functiondecl functionName="fornum" lineNumber="1067"/>
    <functiondecl functionName="forlist" lineNumber="1089"/>
    <functiondecl functionName="forstat" lineNumber="1112"/>
    <functiondecl functionName="test_then_block" lineNumber="1130"/>
    <functiondecl functionName="ifstat" lineNumber="1141"/>
    <functiondecl functionName="localfunc" lineNumber="1165"/>
    <functiondecl functionName="localstat" lineNumber="1179"/>
    <functiondecl functionName="funcname" lineNumber="1198"/>
    <functiondecl functionName="funcstat" lineNumber="1212"/>
    <functiondecl functionName="exprstat" lineNumber="1224"/>
    <functiondecl functionName="retstat" lineNumber="1238"/>
    <functiondecl functionName="statement" lineNumber="1271"/>
    <functiondecl functionName="chunk" lineNumber="1325"/>
    <functiondecl functionName="anchor_token" lineNumber="57"/>
    <functiondecl functionName="error_expected" lineNumber="65"/>
    <functiondecl functionName="errorlimit" lineNumber="71"/>
    <functiondecl functionName="testnext" lineNumber="80"/>
    <functiondecl functionName="check" lineNumber="89"/>
    <functiondecl functionName="checknext" lineNumber="94"/>
    <functiondecl functionName="check_match" lineNumber="104"/>
    <functiondecl functionName="str_checkname" lineNumber="117"/>
    <functiondecl functionName="init_exp" lineNumber="126"/>
    <functiondecl functionName="codestring" lineNumber="133"/>
    <functiondecl functionName="checkname" lineNumber="138"/>
    <functiondecl functionName="registerlocalvar" lineNumber="143"/>
    <functiondecl functionName="new_localvar" lineNumber="160"/>
    <functiondecl functionName="adjustlocalvars" lineNumber="167"/>
    <functiondecl functionName="removevars" lineNumber="176"/>
    <functiondecl functionName="indexupvalue" lineNumber="183"/>
    <functiondecl functionName="searchvar" lineNumber="207"/>
    <functiondecl functionName="markupval" lineNumber="217"/>
    <functiondecl functionName="singlevaraux" lineNumber="224"/>
    <functiondecl functionName="singlevar" lineNumber="248"/>
    <functiondecl functionName="adjust_assign" lineNumber="256"/>
    <functiondecl functionName="enterlevel" lineNumber="276"/>
    <functiondecl functionName="enterblock" lineNumber="285"/>
    <functiondecl functionName="leaveblock" lineNumber="296"/>
    <functiondecl functionName="pushclosure" lineNumber="310"/>
    <functiondecl functionName="open_func" lineNumber="328"/>
    <functiondecl functionName="close_func" lineNumber="356"/>
    <functiondecl functionName="luaY_parser" lineNumber="383"/>
    <functiondecl functionName="field" lineNumber="407"/>
    <functiondecl functionName="yindex" lineNumber="418"/>
    <functiondecl functionName="recfield" lineNumber="443"/>
    <functiondecl functionName="closelistfield" lineNumber="464"/>
    <functiondecl functionName="lastlistfield" lineNumber="475"/>
    <functiondecl functionName="listfield" lineNumber="490"/>
    <functiondecl functionName="constructor" lineNumber="498"/>
    <functiondecl functionName="parlist" lineNumber="543"/>
    <functiondecl functionName="body" lineNumber="576"/>
    <functiondecl functionName="explist1" lineNumber="596"/>
    <functiondecl functionName="funcargs" lineNumber="609"/>
    <functiondecl functionName="prefixexp" lineNumber="667"/>
    <functiondecl functionName="primaryexp" lineNumber="690"/>
    <functiondecl functionName="simpleexp" lineNumber="727"/>
    <functiondecl functionName="getunopr" lineNumber="778"/>
    <functiondecl functionName="getbinopr" lineNumber="788"/>
    <functiondecl functionName="subexpr" lineNumber="828"/>
    <functiondecl functionName="expr" lineNumber="856"/>
    <functiondecl functionName="block_follow" lineNumber="871"/>
    <functiondecl functionName="block" lineNumber="881"/>
    <functiondecl functionName="check_conflict" lineNumber="908"/>
    <functiondecl functionName="assignment" lineNumber="931"/>
    <functiondecl functionName="cond" lineNumber="965"/>
    <functiondecl functionName="breakstat" lineNumber="975"/>
    <functiondecl functionName="whilestat" lineNumber="991"/>
    <functiondecl functionName="repeatstat" lineNumber="1010"/>
    <functiondecl functionName="exp1" lineNumber="1036"/>
    <functiondecl functionName="forbody" lineNumber="1046"/>
    <functiondecl functionName="fornum" lineNumber="1067"/>
    <functiondecl functionName="forlist" lineNumber="1089"/>
    <functiondecl functionName="forstat" lineNumber="1112"/>
    <functiondecl functionName="test_then_block" lineNumber="1130"/>
    <functiondecl functionName="ifstat" lineNumber="1141"/>
    <functiondecl functionName="localfunc" lineNumber="1165"/>
    <functiondecl functionName="localstat" lineNumber="1179"/>
    <functiondecl functionName="funcname" lineNumber="1198"/>
    <functiondecl functionName="funcstat" lineNumber="1212"/>
    <functiondecl functionName="exprstat" lineNumber="1224"/>
    <functiondecl functionName="retstat" lineNumber="1238"/>
    <functiondecl functionName="statement" lineNumber="1271"/>
    <functiondecl functionName="chunk" lineNumber="1325"/>
    <functiondecl functionName="anchor_token" lineNumber="57"/>
    <functiondecl functionName="error_expected" lineNumber="65"/>
    <functiondecl functionName="errorlimit" lineNumber="71"/>
    <functiondecl functionName="testnext" lineNumber="80"/>
    <functiondecl functionName="check" lineNumber="89"/>
    <functiondecl functionName="checknext" lineNumber="94"/>
    <functiondecl functionName="check_match" lineNumber="104"/>
    <functiondecl functionName="str_checkname" lineNumber="117"/>
    <functiondecl functionName="init_exp" lineNumber="126"/>
    <functiondecl functionName="codestring" lineNumber="133"/>
    <functiondecl functionName="checkname" lineNumber="138"/>
    <functiondecl functionName="registerlocalvar" lineNumber="143"/>
    <functiondecl functionName="new_localvar" lineNumber="160"/>
    <functiondecl functionName="adjustlocalvars" lineNumber="167"/>
    <functiondecl functionName="removevars" lineNumber="176"/>
    <functiondecl functionName="indexupvalue" lineNumber="183"/>
    <functiondecl functionName="searchvar" lineNumber="207"/>
    <functiondecl functionName="markupval" lineNumber="217"/>
    <functiondecl functionName="singlevaraux" lineNumber="224"/>
    <functiondecl functionName="singlevar" lineNumber="248"/>
    <functiondecl functionName="adjust_assign" lineNumber="256"/>
    <functiondecl functionName="enterlevel" lineNumber="276"/>
    <functiondecl functionName="enterblock" lineNumber="285"/>
    <functiondecl functionName="leaveblock" lineNumber="296"/>
    <functiondecl functionName="pushclosure" lineNumber="310"/>
    <functiondecl functionName="open_func" lineNumber="328"/>
    <functiondecl functionName="close_func" lineNumber="356"/>
    <functiondecl functionName="luaY_parser" lineNumber="383"/>
    <functiondecl functionName="field" lineNumber="407"/>
    <functiondecl functionName="yindex" lineNumber="418"/>
    <functiondecl functionName="recfield" lineNumber="443"/>
    <functiondecl functionName="closelistfield" lineNumber="464"/>
    <functiondecl functionName="lastlistfield" lineNumber="475"/>
    <functiondecl functionName="listfield" lineNumber="490"/>
    <functiondecl functionName="constructor" lineNumber="498"/>
    <functiondecl functionName="parlist" lineNumber="543"/>
    <functiondecl functionName="body" lineNumber="576"/>
    <functiondecl functionName="explist1" lineNumber="596"/>
    <functiondecl functionName="funcargs" lineNumber="609"/>
    <functiondecl functionName="prefixexp" lineNumber="667"/>
    <functiondecl functionName="primaryexp" lineNumber="690"/>
    <functiondecl functionName="simpleexp" lineNumber="727"/>
    <functiondecl functionName="getunopr" lineNumber="778"/>
    <functiondecl functionName="getbinopr" lineNumber="788"/>
    <functiondecl functionName="subexpr" lineNumber="828"/>
    <functiondecl functionName="expr" lineNumber="856"/>
    <functiondecl functionName="block_follow" lineNumber="871"/>
    <functiondecl functionName="block" lineNumber="881"/>
    <functiondecl functionName="check_conflict" lineNumber="908"/>
    <functiondecl functionName="assignment" lineNumber="931"/>
    <functiondecl functionName="cond" lineNumber="965"/>
    <functiondecl functionName="breakstat" lineNumber="975"/>
    <functiondecl functionName="whilestat" lineNumber="991"/>
    <functiondecl functionName="repeatstat" lineNumber="1010"/>
    <functiondecl functionName="exp1" lineNumber="1036"/>
    <functiondecl functionName="forbody" lineNumber="1046"/>
    <functiondecl functionName="fornum" lineNumber="1067"/>
    <functiondecl functionName="forlist" lineNumber="1089"/>
    <functiondecl functionName="forstat" lineNumber="1112"/>
    <functiondecl functionName="test_then_block" lineNumber="1130"/>
    <functiondecl functionName="ifstat" lineNumber="1141"/>
    <functiondecl functionName="localfunc" lineNumber="1165"/>
    <functiondecl functionName="localstat" lineNumber="1179"/>
    <functiondecl functionName="funcname" lineNumber="1198"/>
    <functiondecl functionName="funcstat" lineNumber="1212"/>
    <functiondecl functionName="exprstat" lineNumber="1224"/>
    <functiondecl functionName="retstat" lineNumber="1238"/>
    <functiondecl functionName="statement" lineNumber="1271"/>
    <functiondecl functionName="chunk" lineNumber="1325"/>
    <functioncall functionName="L"/>
    <functioncall functionName="NULL"/>
    <functioncall functionName="OPR_ADD"/>
    <functioncall functionName="OPR_AND"/>
    <functioncall functionName="OPR_CONCAT"/>
    <functioncall functionName="OPR_DIV"/>
    <functioncall functionName="OPR_EQ"/>
    <functioncall functionName="OPR_GE"/>
    <functioncall functionName="OPR_GT"/>
    <functioncall functionName="OPR_LE"/>
    <functioncall functionName="OPR_LEN"/>
    <functioncall functionName="OPR_LT"/>
    <functioncall functionName="OPR_MINUS"/>
    <functioncall functionName="OPR_MOD"/>
    <functioncall functionName="OPR_MUL"/>
    <functioncall functionName="OPR_NE"/>
    <functioncall functionName="OPR_NOBINOPR"/>
    <functioncall functionName="OPR_NOT"/>
    <functioncall functionName="OPR_NOUNOPR"/>
    <functioncall functionName="OPR_OR"/>
    <functioncall functionName="OPR_POW"/>
    <functioncall functionName="OPR_SUB"/>
    <functioncall functionName="OP_ADD"/>
    <functioncall functionName="OP_CALL"/>
    <functioncall functionName="OP_CLOSE"/>
    <functioncall functionName="OP_CLOSURE"/>
    <functioncall functionName="OP_CONCAT"/>
    <functioncall functionName="OP_DIV"/>
    <functioncall functionName="OP_EQ"/>
    <functioncall functionName="OP_FORLOOP"/>
    <functioncall functionName="OP_FORPREP"/>
    <functioncall functionName="OP_GETGLOBAL"/>
    <functioncall functionName="OP_GETTABLE"/>
    <functioncall functionName="OP_GETUPVAL"/>
    <functioncall functionName="OP_JMP"/>
    <functioncall functionName="OP_LE"/>
    <functioncall functionName="OP_LEN"/>
    <functioncall functionName="OP_LOADBOOL"/>
    <functioncall functionName="OP_LOADK"/>
    <functioncall functionName="OP_LOADNIL"/>
    <functioncall functionName="OP_LT"/>
    <functioncall functionName="OP_MOD"/>
    <functioncall functionName="OP_MOVE"/>
    <functioncall functionName="OP_MUL"/>
    <functioncall functionName="OP_NEWTABLE"/>
    <functioncall functionName="OP_NOT"/>
    <functioncall functionName="OP_POW"/>
    <functioncall functionName="OP_RETURN"/>
    <functioncall functionName="OP_SELF"/>
    <functioncall functionName="OP_SETGLOBAL"/>
    <functioncall functionName="OP_SETLIST"/>
    <functioncall functionName="OP_SETTABLE"/>
    <functioncall functionName="OP_SETUPVAL"/>
    <functioncall functionName="OP_SUB"/>
    <functioncall functionName="OP_TAILCALL"/>
    <functioncall functionName="OP_TEST"/>
    <functioncall functionName="OP_TESTSET"/>
    <functioncall functionName="OP_TFORLOOP"/>
    <functioncall functionName="OP_UNM"/>
    <functioncall functionName="OP_VARARG"/>
    <functioncall functionName="OpArgK"/>
    <functioncall functionName="OpArgN"/>
    <functioncall functionName="OpArgR"/>
    <functioncall functionName="OpArgU"/>
    <functioncall functionName="SHRT_MAX"/>
    <functioncall functionName="TK_BREAK"/>
    <functioncall functionName="TK_CONCAT"/>
    <functioncall functionName="TK_DO"/>
    <functioncall functionName="TK_DOTS"/>
    <functioncall functionName="TK_ELSE"/>
    <functioncall functionName="TK_ELSEIF"/>
    <functioncall functionName="TK_END"/>
    <functioncall functionName="TK_EOS"/>
    <functioncall functionName="TK_EQ"/>
    <functioncall functionName="TK_FALSE"/>
    <functioncall functionName="TK_FOR"/>
    <functioncall functionName="TK_FUNCTION"/>
    <functioncall functionName="TK_GE"/>
    <functioncall functionName="TK_IF"/>
    <functioncall functionName="TK_IN"/>
    <functioncall functionName="TK_LE"/>
    <functioncall functionName="TK_LOCAL"/>
    <functioncall functionName="TK_NAME"/>
    <functioncall functionName="TK_NE"/>
    <functioncall functionName="TK_NIL"/>
    <functioncall functionName="TK_NOT"/>
    <functioncall functionName="TK_NUMBER"/>
    <functioncall functionName="TK_OR"/>
    <functioncall functionName="TK_REPEAT"/>
    <functioncall functionName="TK_RETURN"/>
    <functioncall functionName="TK_STRING"/>
    <functioncall functionName="TK_THEN"/>
    <functioncall functionName="TK_TRUE"/>
    <functioncall functionName="TK_UNTIL"/>
    <functioncall functionName="TK_WHILE"/>
    <functioncall functionName="TM_ADD"/>
    <functioncall functionName="TM_CALL"/>
    <functioncall functionName="TM_CONCAT"/>
    <functioncall functionName="TM_DIV"/>
    <functioncall functionName="TM_EQ"/>
    <functioncall functionName="TM_GC"/>
    <functioncall functionName="TM_INDEX"/>
    <functioncall functionName="TM_LE"/>
    <functioncall functionName="TM_LEN"/>
    <functioncall functionName="TM_LT"/>
    <functioncall functionName="TM_MOD"/>
    <functioncall functionName="TM_MODE"/>
    <functioncall functionName="TM_MUL"/>
    <functioncall functionName="TM_N"/>
    <functioncall functionName="TM_NEWINDEX"/>
    <functioncall functionName="TM_POW"/>
    <functioncall functionName="TM_SUB"/>
    <functioncall functionName="TM_UNM"/>
    <functioncall functionName="VCALL"/>
    <functioncall functionName="VFALSE"/>
    <functioncall functionName="VGLOBAL"/>
    <functioncall functionName="VINDEXED"/>
    <functioncall functionName="VJMP"/>
    <functioncall functionName="VK"/>
    <functioncall functionName="VKNUM"/>
    <functioncall functionName="VLOCAL"/>
    <functioncall functionName="VNIL"/>
    <functioncall functionName="VNONRELOC"/>
    <functioncall functionName="VRELOCABLE"/>
    <functioncall functionName="VTRUE"/>
    <functioncall functionName="VUPVAL"/>
    <functioncall functionName="VVARARG"/>
    <functioncall functionName="VVOID"/>
    <functioncall functionName="adjust_assign"/>
    <functioncall functionName="adjustlocalvars"/>
    <functioncall functionName="anchor_token"/>
    <functioncall functionName="args"/>
    <functioncall functionName="assignment"/>
    <functioncall functionName="b"/>
    <functioncall functionName="base"/>
    <functioncall functionName="bl"/>
    <functioncall functionName="bl1"/>
    <functioncall functionName="bl2"/>
    <functioncall functionName="block"/>
    <functioncall functionName="block_follow"/>
    <functioncall functionName="body"/>
    <functioncall functionName="break"/>
    <functioncall functionName="breaklist"/>
    <functioncall functionName="breakstat"/>
    <functioncall functionName="buff"/>
    <functioncall functionName="c"/>
    <functioncall functionName="cast"/>
    <functioncall functionName="cc"/>
    <functioncall functionName="char"/>
    <functioncall functionName="check"/>
    <functioncall functionName="check_conflict"/>
    <functioncall functionName="check_match"/>
    <functioncall functionName="checkname"/>
    <functioncall functionName="checknext"/>
    <functioncall functionName="chunk"/>
    <functioncall functionName="close_func"/>
    <functioncall functionName="closelistfield"/>
    <functioncall functionName="code"/>
    <functioncall functionName="codestring"/>
    <functioncall functionName="cond"/>
    <functioncall functionName="condexit"/>
    <functioncall functionName="conflict"/>
    <functioncall functionName="constructor"/>
    <functioncall functionName="default"/>
    <functioncall functionName="double"/>
    <functioncall functionName="e"/>
    <functioncall functionName="endfor"/>
    <functioncall functionName="enterblock"/>
    <functioncall functionName="enterlevel"/>
    <functioncall functionName="error_expected"/>
    <functioncall functionName="errorlimit"/>
    <functioncall functionName="escapelist"/>
    <functioncall functionName="exp1"/>
    <functioncall functionName="explist1"/>
    <functioncall functionName="expr"/>
    <functioncall functionName="exprstat"/>
    <functioncall functionName="extra"/>
    <functioncall functionName="f"/>
    <functioncall functionName="field"/>
    <functioncall functionName="first"/>
    <functioncall functionName="flist"/>
    <functioncall functionName="for"/>
    <functioncall functionName="forbody"/>
    <functioncall functionName="forlist"/>
    <functioncall functionName="fornum"/>
    <functioncall functionName="forstat"/>
    <functioncall functionName="freereg"/>
    <functioncall functionName="fs"/>
    <functioncall functionName="funcargs"/>
    <functioncall functionName="funcname"/>
    <functioncall functionName="funcstat"/>
    <functioncall functionName="funcstate"/>
    <functioncall functionName="getbinopr"/>
    <functioncall functionName="getunopr"/>
    <functioncall functionName="h"/>
    <functioncall functionName="i"/>
    <functioncall functionName="iABC"/>
    <functioncall functionName="iABx"/>
    <functioncall functionName="iAsBx"/>
    <functioncall functionName="if"/>
    <functioncall functionName="ifstat"/>
    <functioncall functionName="indexname"/>
    <functioncall functionName="indexupvalue"/>
    <functioncall functionName="info"/>
    <functioncall functionName="init_exp"/>
    <functioncall functionName="int"/>
    <functioncall functionName="is_vararg"/>
    <functioncall functionName="isbreakable"/>
    <functioncall functionName="isnum"/>
    <functioncall functionName="k"/>
    <functioncall functionName="key"/>
    <functioncall functionName="lastline"/>
    <functioncall functionName="lastlistfield"/>
    <functioncall functionName="leaveblock"/>
    <functioncall functionName="left"/>
    <functioncall functionName="len"/>
    <functioncall functionName="lexstate"/>
    <functioncall functionName="lh"/>
    <functioncall functionName="limit"/>
    <functioncall functionName="line"/>
    <functioncall functionName="linedefined"/>
    <functioncall functionName="lineinfo"/>
    <functioncall functionName="linenumber"/>
    <functioncall functionName="listfield"/>
    <functioncall functionName="localfunc"/>
    <functioncall functionName="localstat"/>
    <functioncall functionName="locvars"/>
    <functioncall functionName="long"/>
    <functioncall functionName="ls"/>
    <functioncall functionName="luaC_barrierf"/>
    <functioncall functionName="luaD_growstack"/>
    <functioncall functionName="luaD_reallocstack"/>
    <functioncall functionName="luaF_newproto"/>
    <functioncall functionName="luaH_new"/>
    <functioncall functionName="luaK_checkstack"/>
    <functioncall functionName="luaK_codeABC"/>
    <functioncall functionName="luaK_codeABx"/>
    <functioncall functionName="luaK_concat"/>
    <functioncall functionName="luaK_dischargevars"/>
    <functioncall functionName="luaK_exp2RK"/>
    <functioncall functionName="luaK_exp2anyreg"/>
    <functioncall functionName="luaK_exp2nextreg"/>
    <functioncall functionName="luaK_exp2val"/>
    <functioncall functionName="luaK_fixline"/>
    <functioncall functionName="luaK_getlabel"/>
    <functioncall functionName="luaK_goiftrue"/>
    <functioncall functionName="luaK_indexed"/>
    <functioncall functionName="luaK_infix"/>
    <functioncall functionName="luaK_jump"/>
    <functioncall functionName="luaK_nil"/>
    <functioncall functionName="luaK_numberK"/>
    <functioncall functionName="luaK_patchlist"/>
    <functioncall functionName="luaK_patchtohere"/>
    <functioncall functionName="luaK_posfix"/>
    <functioncall functionName="luaK_prefix"/>
    <functioncall functionName="luaK_reserveregs"/>
    <functioncall functionName="luaK_ret"/>
    <functioncall functionName="luaK_self"/>
    <functioncall functionName="luaK_setlist"/>
    <functioncall functionName="luaK_setoneret"/>
    <functioncall functionName="luaK_setreturns"/>
    <functioncall functionName="luaK_storevar"/>
    <functioncall functionName="luaK_stringK"/>
    <functioncall functionName="luaM_growaux_"/>
    <functioncall functionName="luaM_realloc_"/>
    <functioncall functionName="luaM_toobig"/>
    <functioncall functionName="luaO_int2fb"/>
    <functioncall functionName="luaO_pushfstring"/>
    <functioncall functionName="luaS_newlstr"/>
    <functioncall functionName="luaX_lexerror"/>
    <functioncall functionName="luaX_lookahead"/>
    <functioncall functionName="luaX_newstring"/>
    <functioncall functionName="luaX_next"/>
    <functioncall functionName="luaX_setinput"/>
    <functioncall functionName="luaX_syntaxerror"/>
    <functioncall functionName="luaX_token2str"/>
    <functioncall functionName="lua_atpanic"/>
    <functioncall functionName="lua_call"/>
    <functioncall functionName="lua_checkstack"/>
    <functioncall functionName="lua_close"/>
    <functioncall functionName="lua_concat"/>
    <functioncall functionName="lua_cpcall"/>
    <functioncall functionName="lua_createtable"/>
    <functioncall functionName="lua_dump"/>
    <functioncall functionName="lua_equal"/>
    <functioncall functionName="lua_error"/>
    <functioncall functionName="lua_gc"/>
    <functioncall functionName="lua_getallocf"/>
    <functioncall functionName="lua_getfenv"/>
    <functioncall functionName="lua_getfield"/>
    <functioncall functionName="lua_getmetatable"/>
    <functioncall functionName="lua_gettable"/>
    <functioncall functionName="lua_gettop"/>
    <functioncall functionName="lua_insert"/>
    <functioncall functionName="lua_iscfunction"/>
    <functioncall functionName="lua_isnumber"/>
    <functioncall functionName="lua_isstring"/>
    <functioncall functionName="lua_isuserdata"/>
    <functioncall functionName="lua_lessthan"/>
    <functioncall functionName="lua_load"/>
    <functioncall functionName="lua_next"/>
    <functioncall functionName="lua_objlen"/>
    <functioncall functionName="lua_pcall"/>
    <functioncall functionName="lua_pushboolean"/>
    <functioncall functionName="lua_pushcclosure"/>
    <functioncall functionName="lua_pushinteger"/>
    <functioncall functionName="lua_pushlightuserdata"/>
    <functioncall functionName="lua_pushlstring"/>
    <functioncall functionName="lua_pushnil"/>
    <functioncall functionName="lua_pushnumber"/>
    <functioncall functionName="lua_pushstring"/>
    <functioncall functionName="lua_pushthread"/>
    <functioncall functionName="lua_pushvalue"/>
    <functioncall functionName="lua_rawequal"/>
    <functioncall functionName="lua_rawget"/>
    <functioncall functionName="lua_rawgeti"/>
    <functioncall functionName="lua_rawset"/>
    <functioncall functionName="lua_rawseti"/>
    <functioncall functionName="lua_remove"/>
    <functioncall functionName="lua_replace"/>
    <functioncall functionName="lua_resume"/>
    <functioncall functionName="lua_setfenv"/>
    <functioncall functionName="lua_setfield"/>
    <functioncall functionName="lua_setmetatable"/>
    <functioncall functionName="lua_settable"/>
    <functioncall functionName="lua_settop"/>
    <functioncall functionName="lua_status"/>
    <functioncall functionName="lua_toboolean"/>
    <functioncall functionName="lua_tocfunction"/>
    <functioncall functionName="lua_tointeger"/>
    <functioncall functionName="lua_tonumber"/>
    <functioncall functionName="lua_type"/>
    <functioncall functionName="lua_xmove"/>
    <functioncall functionName="lua_yield"/>
    <functioncall functionName="marked"/>
    <functioncall functionName="markupval"/>
    <functioncall functionName="msg"/>
    <functioncall functionName="n"/>
    <functioncall functionName="nCcalls"/>
    <functioncall functionName="na"/>
    <functioncall functionName="nactvar"/>
    <functioncall functionName="name"/>
    <functioncall functionName="needself"/>
    <functioncall functionName="new_fs"/>
    <functioncall functionName="new_localvar"/>
    <functioncall functionName="nexps"/>
    <functioncall functionName="nextop"/>
    <functioncall functionName="nh"/>
    <functioncall functionName="nk"/>
    <functioncall functionName="nlocvars"/>
    <functioncall functionName="np"/>
    <functioncall functionName="nparams"/>
    <functioncall functionName="nret"/>
    <functioncall functionName="nups"/>
    <functioncall functionName="nv"/>
    <functioncall functionName="nvars"/>
    <functioncall functionName="o"/>
    <functioncall functionName="op"/>
    <functioncall functionName="open_func"/>
    <functioncall functionName="p"/>
    <functioncall functionName="parlist"/>
    <functioncall functionName="pc"/>
    <functioncall functionName="prefixexp"/>
    <functioncall functionName="prep"/>
    <functioncall functionName="prev"/>
    <functioncall functionName="previous"/>
    <functioncall functionName="primaryexp"/>
    <functioncall functionName="pushclosure"/>
    <functioncall functionName="r"/>
    <functioncall functionName="recfield"/>
    <functioncall functionName="reg"/>
    <functioncall functionName="registerlocalvar"/>
    <functioncall functionName="removevars"/>
    <functioncall functionName="repeat_init"/>
    <functioncall functionName="repeatstat"/>
    <functioncall functionName="retstat"/>
    <functioncall functionName="return"/>
    <functioncall functionName="right"/>
    <functioncall functionName="rkkey"/>
    <functioncall functionName="s"/>
    <functioncall functionName="searchvar"/>
    <functioncall functionName="short"/>
    <functioncall functionName="simpleexp"/>
    <functioncall functionName="singlevar"/>
    <functioncall functionName="singlevaraux"/>
    <functioncall functionName="sizelocvars"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="sizep"/>
    <functioncall functionName="sizeupvalues"/>
    <functioncall functionName="source"/>
    <functioncall functionName="statement"/>
    <functioncall functionName="str_checkname"/>
    <functioncall functionName="strlen"/>
    <functioncall functionName="subexpr"/>
    <functioncall functionName="switch"/>
    <functioncall functionName="t"/>
    <functioncall functionName="test_then_block"/>
    <functioncall functionName="testnext"/>
    <functioncall functionName="token"/>
    <functioncall functionName="top"/>
    <functioncall functionName="tostore"/>
    <functioncall functionName="ts"/>
    <functioncall functionName="uop"/>
    <functioncall functionName="upval"/>
    <functioncall functionName="upvalues"/>
    <functioncall functionName="v"/>
    <functioncall functionName="v2"/>
    <functioncall functionName="val"/>
    <functioncall functionName="var"/>
    <functioncall functionName="varname"/>
    <functioncall functionName="void"/>
    <functioncall functionName="what"/>
    <functioncall functionName="where"/>
    <functioncall functionName="while"/>
    <functioncall functionName="whileinit"/>
    <functioncall functionName="whilestat"/>
    <functioncall functionName="who"/>
    <functioncall functionName="yindex"/>
    <functioncall functionName="z"/>
  </FileInfo>
</analyzerinfo>
