<?xml version="1.0"?>
<analyzerinfo checksum="4031302136">
        <error id="redundantAssignment" severity="style" msg="Variable &apos;local_realloc&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;local_realloc&apos; is reassigned a value before the old one has been used." cwe="563">
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lua_cmsgpack.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lua_cmsgpack.c" line="102"/>
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lua_cmsgpack.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lua_cmsgpack.c" line="99"/>
            <symbol>local_realloc</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;aux&apos; can be reduced." verbose="The scope of the variable &apos;aux&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lua_cmsgpack.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lua_cmsgpack.c" line="72"/>
            <symbol>aux</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lua_cmsgpack.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lua_cmsgpack.c" line="428"/>
            <symbol>n</symbol>
        </error>
  <FileInfo check="Bounds checking">
    <ArraySize array="cmds" size="5"/>
  </FileInfo>
  <FileInfo check="Bounds checking">
    <ArraySize array="cmds" size="5"/>
  </FileInfo>
        <error id="preprocessorErrorDirective" severity="error" msg="No header in #include" verbose="No header in #include">
            <location file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lua.h" line="94"/>
        </error>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="memrevifle" lineNumber="69"/>
    <functiondecl functionName="mp_realloc" lineNumber="98"/>
    <functiondecl functionName="mp_buf_new" lineNumber="107"/>
    <functiondecl functionName="mp_buf_append" lineNumber="118"/>
    <functiondecl functionName="mp_buf_free" lineNumber="130"/>
    <functiondecl functionName="mp_cur_init" lineNumber="154"/>
    <functiondecl functionName="mp_encode_bytes" lineNumber="174"/>
    <functiondecl functionName="mp_encode_double" lineNumber="203"/>
    <functiondecl functionName="mp_encode_int" lineNumber="221"/>
    <functiondecl functionName="mp_encode_array" lineNumber="293"/>
    <functiondecl functionName="mp_encode_map" lineNumber="316"/>
    <functiondecl functionName="mp_encode_lua_string" lineNumber="341"/>
    <functiondecl functionName="mp_encode_lua_bool" lineNumber="349"/>
    <functiondecl functionName="mp_encode_lua_integer" lineNumber="355"/>
    <functiondecl functionName="mp_encode_lua_number" lineNumber="367"/>
    <functiondecl functionName="mp_encode_lua_table_as_array" lineNumber="380"/>
    <functiondecl functionName="mp_encode_lua_table_as_map" lineNumber="397"/>
    <functiondecl functionName="table_is_an_array" lineNumber="425"/>
    <functiondecl functionName="mp_encode_lua_table" lineNumber="468"/>
    <functiondecl functionName="mp_encode_lua_null" lineNumber="475"/>
    <functiondecl functionName="mp_encode_lua_type" lineNumber="482"/>
    <functiondecl functionName="mp_pack" lineNumber="512"/>
    <functiondecl functionName="mp_decode_to_lua_array" lineNumber="551"/>
    <functiondecl functionName="mp_decode_to_lua_hash" lineNumber="565"/>
    <functiondecl functionName="mp_decode_to_lua_type" lineNumber="579"/>
    <functiondecl functionName="mp_unpack_full" lineNumber="793"/>
    <functiondecl functionName="mp_unpack" lineNumber="849"/>
    <functiondecl functionName="mp_unpack_one" lineNumber="853"/>
    <functiondecl functionName="mp_unpack_limit" lineNumber="860"/>
    <functiondecl functionName="mp_safe" lineNumber="869"/>
    <functiondecl functionName="luaopen_create" lineNumber="900"/>
    <functiondecl functionName="luaopen_cmsgpack" lineNumber="923"/>
    <functiondecl functionName="luaopen_cmsgpack_safe" lineNumber="935"/>
    <functiondecl functionName="memrevifle" lineNumber="69"/>
    <functiondecl functionName="mp_realloc" lineNumber="98"/>
    <functiondecl functionName="mp_buf_new" lineNumber="107"/>
    <functiondecl functionName="mp_buf_append" lineNumber="118"/>
    <functiondecl functionName="mp_buf_free" lineNumber="130"/>
    <functiondecl functionName="mp_cur_init" lineNumber="154"/>
    <functiondecl functionName="mp_encode_bytes" lineNumber="174"/>
    <functiondecl functionName="mp_encode_double" lineNumber="203"/>
    <functiondecl functionName="mp_encode_int" lineNumber="221"/>
    <functiondecl functionName="mp_encode_array" lineNumber="293"/>
    <functiondecl functionName="mp_encode_map" lineNumber="316"/>
    <functiondecl functionName="mp_encode_lua_string" lineNumber="341"/>
    <functiondecl functionName="mp_encode_lua_bool" lineNumber="349"/>
    <functiondecl functionName="mp_encode_lua_integer" lineNumber="355"/>
    <functiondecl functionName="mp_encode_lua_number" lineNumber="367"/>
    <functiondecl functionName="mp_encode_lua_table_as_array" lineNumber="380"/>
    <functiondecl functionName="mp_encode_lua_table_as_map" lineNumber="397"/>
    <functiondecl functionName="table_is_an_array" lineNumber="425"/>
    <functiondecl functionName="mp_encode_lua_table" lineNumber="468"/>
    <functiondecl functionName="mp_encode_lua_null" lineNumber="475"/>
    <functiondecl functionName="mp_encode_lua_type" lineNumber="482"/>
    <functiondecl functionName="mp_pack" lineNumber="512"/>
    <functiondecl functionName="mp_decode_to_lua_array" lineNumber="551"/>
    <functiondecl functionName="mp_decode_to_lua_hash" lineNumber="565"/>
    <functiondecl functionName="mp_decode_to_lua_type" lineNumber="579"/>
    <functiondecl functionName="mp_unpack_full" lineNumber="793"/>
    <functiondecl functionName="mp_unpack" lineNumber="849"/>
    <functiondecl functionName="mp_unpack_one" lineNumber="853"/>
    <functiondecl functionName="mp_unpack_limit" lineNumber="860"/>
    <functiondecl functionName="mp_safe" lineNumber="869"/>
    <functiondecl functionName="luaopen_create" lineNumber="900"/>
    <functiondecl functionName="luaopen_cmsgpack" lineNumber="923"/>
    <functiondecl functionName="luaopen_cmsgpack_safe" lineNumber="935"/>
    <functioncall functionName="BUFSIZ"/>
    <functioncall functionName="INT_MAX"/>
    <functioncall functionName="L"/>
    <functioncall functionName="NULL"/>
    <functioncall functionName="argc"/>
    <functioncall functionName="assert"/>
    <functioncall functionName="aux"/>
    <functioncall functionName="b"/>
    <functioncall functionName="break"/>
    <functioncall functionName="buf"/>
    <functioncall functionName="c"/>
    <functioncall functionName="char"/>
    <functioncall functionName="cmds"/>
    <functioncall functionName="d"/>
    <functioncall functionName="decode_all"/>
    <functioncall functionName="default"/>
    <functioncall functionName="double"/>
    <functioncall functionName="enclen"/>
    <functioncall functionName="err"/>
    <functioncall functionName="f"/>
    <functioncall functionName="float"/>
    <functioncall functionName="for"/>
    <functioncall functionName="free"/>
    <functioncall functionName="func"/>
    <functioncall functionName="hdr"/>
    <functioncall functionName="hdrlen"/>
    <functioncall functionName="i"/>
    <functioncall functionName="if"/>
    <functioncall functionName="int"/>
    <functioncall functionName="int16_t"/>
    <functioncall functionName="int32_t"/>
    <functioncall functionName="int64_t"/>
    <functioncall functionName="isinf"/>
    <functioncall functionName="j"/>
    <functioncall functionName="l"/>
    <functioncall functionName="left"/>
    <functioncall functionName="len"/>
    <functioncall functionName="level"/>
    <functioncall functionName="limit"/>
    <functioncall functionName="local_realloc"/>
    <functioncall functionName="long"/>
    <functioncall functionName="luaL_addlstring"/>
    <functioncall functionName="luaL_addstring"/>
    <functioncall functionName="luaL_addvalue"/>
    <functioncall functionName="luaL_argerror"/>
    <functioncall functionName="luaL_buffinit"/>
    <functioncall functionName="luaL_callmeta"/>
    <functioncall functionName="luaL_checkany"/>
    <functioncall functionName="luaL_checkinteger"/>
    <functioncall functionName="luaL_checklstring"/>
    <functioncall functionName="luaL_checknumber"/>
    <functioncall functionName="luaL_checkoption"/>
    <functioncall functionName="luaL_checkstack"/>
    <functioncall functionName="luaL_checktype"/>
    <functioncall functionName="luaL_error"/>
    <functioncall functionName="luaL_getmetafield"/>
    <functioncall functionName="luaL_loadbuffer"/>
    <functioncall functionName="luaL_loadfile"/>
    <functioncall functionName="luaL_loadstring"/>
    <functioncall functionName="luaL_newmetatable"/>
    <functioncall functionName="luaL_openlib"/>
    <functioncall functionName="luaL_optinteger"/>
    <functioncall functionName="luaL_optnumber"/>
    <functioncall functionName="luaL_pushresult"/>
    <functioncall functionName="luaL_ref"/>
    <functioncall functionName="luaL_register"/>
    <functioncall functionName="luaL_typerror"/>
    <functioncall functionName="luaL_unref"/>
    <functioncall functionName="luaL_where"/>
    <functioncall functionName="lua_atpanic"/>
    <functioncall functionName="lua_call"/>
    <functioncall functionName="lua_checkstack"/>
    <functioncall functionName="lua_close"/>
    <functioncall functionName="lua_concat"/>
    <functioncall functionName="lua_cpcall"/>
    <functioncall functionName="lua_createtable"/>
    <functioncall functionName="lua_dump"/>
    <functioncall functionName="lua_equal"/>
    <functioncall functionName="lua_error"/>
    <functioncall functionName="lua_gc"/>
    <functioncall functionName="lua_getallocf"/>
    <functioncall functionName="lua_getfenv"/>
    <functioncall functionName="lua_getfield"/>
    <functioncall functionName="lua_getmetatable"/>
    <functioncall functionName="lua_gettable"/>
    <functioncall functionName="lua_gettop"/>
    <functioncall functionName="lua_insert"/>
    <functioncall functionName="lua_iscfunction"/>
    <functioncall functionName="lua_isnumber"/>
    <functioncall functionName="lua_isstring"/>
    <functioncall functionName="lua_isuserdata"/>
    <functioncall functionName="lua_lessthan"/>
    <functioncall functionName="lua_load"/>
    <functioncall functionName="lua_next"/>
    <functioncall functionName="lua_objlen"/>
    <functioncall functionName="lua_pcall"/>
    <functioncall functionName="lua_pushboolean"/>
    <functioncall functionName="lua_pushcclosure"/>
    <functioncall functionName="lua_pushinteger"/>
    <functioncall functionName="lua_pushlightuserdata"/>
    <functioncall functionName="lua_pushlstring"/>
    <functioncall functionName="lua_pushnil"/>
    <functioncall functionName="lua_pushnumber"/>
    <functioncall functionName="lua_pushstring"/>
    <functioncall functionName="lua_pushthread"/>
    <functioncall functionName="lua_pushvalue"/>
    <functioncall functionName="lua_rawequal"/>
    <functioncall functionName="lua_rawget"/>
    <functioncall functionName="lua_rawgeti"/>
    <functioncall functionName="lua_rawset"/>
    <functioncall functionName="lua_rawseti"/>
    <functioncall functionName="lua_remove"/>
    <functioncall functionName="lua_replace"/>
    <functioncall functionName="lua_resume"/>
    <functioncall functionName="lua_setfenv"/>
    <functioncall functionName="lua_setfield"/>
    <functioncall functionName="lua_setmetatable"/>
    <functioncall functionName="lua_settable"/>
    <functioncall functionName="lua_settop"/>
    <functioncall functionName="lua_status"/>
    <functioncall functionName="lua_toboolean"/>
    <functioncall functionName="lua_tocfunction"/>
    <functioncall functionName="lua_tointeger"/>
    <functioncall functionName="lua_tolstring"/>
    <functioncall functionName="lua_tonumber"/>
    <functioncall functionName="lua_type"/>
    <functioncall functionName="lua_xmove"/>
    <functioncall functionName="lua_yield"/>
    <functioncall functionName="luaopen_cmsgpack"/>
    <functioncall functionName="luaopen_create"/>
    <functioncall functionName="max"/>
    <functioncall functionName="memcpy"/>
    <functioncall functionName="memrevifle"/>
    <functioncall functionName="mp_buf_append"/>
    <functioncall functionName="mp_buf_free"/>
    <functioncall functionName="mp_buf_new"/>
    <functioncall functionName="mp_cur_init"/>
    <functioncall functionName="mp_decode_to_lua_array"/>
    <functioncall functionName="mp_decode_to_lua_hash"/>
    <functioncall functionName="mp_decode_to_lua_type"/>
    <functioncall functionName="mp_encode_array"/>
    <functioncall functionName="mp_encode_bytes"/>
    <functioncall functionName="mp_encode_double"/>
    <functioncall functionName="mp_encode_int"/>
    <functioncall functionName="mp_encode_lua_bool"/>
    <functioncall functionName="mp_encode_lua_integer"/>
    <functioncall functionName="mp_encode_lua_null"/>
    <functioncall functionName="mp_encode_lua_number"/>
    <functioncall functionName="mp_encode_lua_string"/>
    <functioncall functionName="mp_encode_lua_table"/>
    <functioncall functionName="mp_encode_lua_table_as_array"/>
    <functioncall functionName="mp_encode_lua_table_as_map"/>
    <functioncall functionName="mp_encode_lua_type"/>
    <functioncall functionName="mp_encode_map"/>
    <functioncall functionName="mp_pack"/>
    <functioncall functionName="mp_realloc"/>
    <functioncall functionName="mp_safe"/>
    <functioncall functionName="mp_unpack"/>
    <functioncall functionName="mp_unpack_full"/>
    <functioncall functionName="mp_unpack_limit"/>
    <functioncall functionName="mp_unpack_one"/>
    <functioncall functionName="n"/>
    <functioncall functionName="name"/>
    <functioncall functionName="nargs"/>
    <functioncall functionName="newsize"/>
    <functioncall functionName="nsize"/>
    <functioncall functionName="offset"/>
    <functioncall functionName="osize"/>
    <functioncall functionName="p"/>
    <functioncall functionName="ptr"/>
    <functioncall functionName="return"/>
    <functioncall functionName="s"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="stacktop"/>
    <functioncall functionName="switch"/>
    <functioncall functionName="t"/>
    <functioncall functionName="table_is_an_array"/>
    <functioncall functionName="target"/>
    <functioncall functionName="test"/>
    <functioncall functionName="ud"/>
    <functioncall functionName="uint32_t"/>
    <functioncall functionName="uint64_t"/>
    <functioncall functionName="void"/>
    <functioncall functionName="while"/>
  </FileInfo>
</analyzerinfo>
