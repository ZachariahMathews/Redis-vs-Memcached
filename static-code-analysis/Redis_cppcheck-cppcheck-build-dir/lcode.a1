<?xml version="1.0"?>
<analyzerinfo checksum="2147963841">
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;previous&apos; can be reduced." verbose="The scope of the variable &apos;previous&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lcode.c" file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lcode.c" line="36"/>
            <symbol>previous</symbol>
        </error>
  <FileInfo check="Bounds checking">
    <ArraySize array="luaP_opmodes" size="38"/>
    <ArraySize array="luaP_opnames" size="39"/>
  </FileInfo>
  <FileInfo check="Bounds checking">
    <ArraySize array="luaP_opmodes" size="38"/>
    <ArraySize array="luaP_opnames" size="39"/>
  </FileInfo>
  <FileInfo check="Bounds checking">
    <ArraySize array="luaP_opmodes" size="38"/>
    <ArraySize array="luaP_opnames" size="39"/>
  </FileInfo>
        <error id="preprocessorErrorDirective" severity="error" msg="No header in #include" verbose="No header in #include">
            <location file="C:\Users\bharm\Downloads\redis-unstable\deps\lua\src\lua.h" line="94"/>
        </error>
  <FileInfo check="Bounds checking">
    <ArraySize array="luaP_opmodes" size="38"/>
    <ArraySize array="luaP_opnames" size="39"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="isnumeral" lineNumber="30"/>
    <functiondecl functionName="luaK_nil" lineNumber="35"/>
    <functiondecl functionName="luaK_jump" lineNumber="59"/>
    <functiondecl functionName="luaK_ret" lineNumber="69"/>
    <functiondecl functionName="condjump" lineNumber="74"/>
    <functiondecl functionName="fixjump" lineNumber="80"/>
    <functiondecl functionName="luaK_getlabel" lineNumber="94"/>
    <functiondecl functionName="getjump" lineNumber="100"/>
    <functiondecl functionName="getjumpcontrol" lineNumber="109"/>
    <functiondecl functionName="need_value" lineNumber="122"/>
    <functiondecl functionName="patchtestreg" lineNumber="131"/>
    <functiondecl functionName="removevalues" lineNumber="144"/>
    <functiondecl functionName="patchlistaux" lineNumber="150"/>
    <functiondecl functionName="dischargejpc" lineNumber="163"/>
    <functiondecl functionName="luaK_patchlist" lineNumber="169"/>
    <functiondecl functionName="luaK_patchtohere" lineNumber="179"/>
    <functiondecl functionName="luaK_concat" lineNumber="185"/>
    <functiondecl functionName="luaK_checkstack" lineNumber="199"/>
    <functiondecl functionName="luaK_reserveregs" lineNumber="209"/>
    <functiondecl functionName="freereg" lineNumber="215"/>
    <functiondecl functionName="freeexp" lineNumber="223"/>
    <functiondecl functionName="addk" lineNumber="229"/>
    <functiondecl functionName="luaK_stringK" lineNumber="250"/>
    <functiondecl functionName="luaK_numberK" lineNumber="257"/>
    <functiondecl functionName="boolK" lineNumber="264"/>
    <functiondecl functionName="nilK" lineNumber="271"/>
    <functiondecl functionName="luaK_setreturns" lineNumber="280"/>
    <functiondecl functionName="luaK_setoneret" lineNumber="292"/>
    <functiondecl functionName="luaK_dischargevars" lineNumber="304"/>
    <functiondecl functionName="code_label" lineNumber="337"/>
    <functiondecl functionName="discharge2reg" lineNumber="343"/>
    <functiondecl functionName="discharge2anyreg" lineNumber="382"/>
    <functiondecl functionName="exp2reg" lineNumber="390"/>
    <functiondecl functionName="luaK_exp2nextreg" lineNumber="414"/>
    <functiondecl functionName="luaK_exp2anyreg" lineNumber="422"/>
    <functiondecl functionName="luaK_exp2val" lineNumber="436"/>
    <functiondecl functionName="luaK_exp2RK" lineNumber="444"/>
    <functiondecl functionName="luaK_storevar" lineNumber="472"/>
    <functiondecl functionName="luaK_self" lineNumber="503"/>
    <functiondecl functionName="invertjump" lineNumber="516"/>
    <functiondecl functionName="jumponcond" lineNumber="524"/>
    <functiondecl functionName="luaK_goiftrue" lineNumber="539"/>
    <functiondecl functionName="luaK_goiffalse" lineNumber="563"/>
    <functiondecl functionName="codenot" lineNumber="586"/>
    <functiondecl functionName="luaK_indexed" lineNumber="621"/>
    <functiondecl functionName="constfolding" lineNumber="627"/>
    <functiondecl functionName="codearith" lineNumber="653"/>
    <functiondecl functionName="codecomp" lineNumber="673"/>
    <functiondecl functionName="luaK_prefix" lineNumber="689"/>
    <functiondecl functionName="luaK_infix" lineNumber="710"/>
    <functiondecl functionName="luaK_posfix" lineNumber="737"/>
    <functiondecl functionName="luaK_fixline" lineNumber="784"/>
    <functiondecl functionName="luaK_code" lineNumber="789"/>
    <functiondecl functionName="luaK_codeABC" lineNumber="804"/>
    <functiondecl functionName="luaK_codeABx" lineNumber="812"/>
    <functiondecl functionName="luaK_setlist" lineNumber="819"/>
    <functiondecl functionName="isnumeral" lineNumber="30"/>
    <functiondecl functionName="luaK_nil" lineNumber="35"/>
    <functiondecl functionName="luaK_jump" lineNumber="59"/>
    <functiondecl functionName="luaK_ret" lineNumber="69"/>
    <functiondecl functionName="condjump" lineNumber="74"/>
    <functiondecl functionName="fixjump" lineNumber="80"/>
    <functiondecl functionName="luaK_getlabel" lineNumber="94"/>
    <functiondecl functionName="getjump" lineNumber="100"/>
    <functiondecl functionName="getjumpcontrol" lineNumber="109"/>
    <functiondecl functionName="need_value" lineNumber="122"/>
    <functiondecl functionName="patchtestreg" lineNumber="131"/>
    <functiondecl functionName="removevalues" lineNumber="144"/>
    <functiondecl functionName="patchlistaux" lineNumber="150"/>
    <functiondecl functionName="dischargejpc" lineNumber="163"/>
    <functiondecl functionName="luaK_patchlist" lineNumber="169"/>
    <functiondecl functionName="luaK_patchtohere" lineNumber="179"/>
    <functiondecl functionName="luaK_concat" lineNumber="185"/>
    <functiondecl functionName="luaK_checkstack" lineNumber="199"/>
    <functiondecl functionName="luaK_reserveregs" lineNumber="209"/>
    <functiondecl functionName="freereg" lineNumber="215"/>
    <functiondecl functionName="freeexp" lineNumber="223"/>
    <functiondecl functionName="addk" lineNumber="229"/>
    <functiondecl functionName="luaK_stringK" lineNumber="250"/>
    <functiondecl functionName="luaK_numberK" lineNumber="257"/>
    <functiondecl functionName="boolK" lineNumber="264"/>
    <functiondecl functionName="nilK" lineNumber="271"/>
    <functiondecl functionName="luaK_setreturns" lineNumber="280"/>
    <functiondecl functionName="luaK_setoneret" lineNumber="292"/>
    <functiondecl functionName="luaK_dischargevars" lineNumber="304"/>
    <functiondecl functionName="code_label" lineNumber="337"/>
    <functiondecl functionName="discharge2reg" lineNumber="343"/>
    <functiondecl functionName="discharge2anyreg" lineNumber="382"/>
    <functiondecl functionName="exp2reg" lineNumber="390"/>
    <functiondecl functionName="luaK_exp2nextreg" lineNumber="414"/>
    <functiondecl functionName="luaK_exp2anyreg" lineNumber="422"/>
    <functiondecl functionName="luaK_exp2val" lineNumber="436"/>
    <functiondecl functionName="luaK_exp2RK" lineNumber="444"/>
    <functiondecl functionName="luaK_storevar" lineNumber="472"/>
    <functiondecl functionName="luaK_self" lineNumber="503"/>
    <functiondecl functionName="invertjump" lineNumber="516"/>
    <functiondecl functionName="jumponcond" lineNumber="524"/>
    <functiondecl functionName="luaK_goiftrue" lineNumber="539"/>
    <functiondecl functionName="luaK_goiffalse" lineNumber="563"/>
    <functiondecl functionName="codenot" lineNumber="586"/>
    <functiondecl functionName="luaK_indexed" lineNumber="621"/>
    <functiondecl functionName="constfolding" lineNumber="627"/>
    <functiondecl functionName="codearith" lineNumber="653"/>
    <functiondecl functionName="codecomp" lineNumber="673"/>
    <functiondecl functionName="luaK_prefix" lineNumber="689"/>
    <functiondecl functionName="luaK_infix" lineNumber="710"/>
    <functiondecl functionName="luaK_posfix" lineNumber="737"/>
    <functiondecl functionName="luaK_fixline" lineNumber="784"/>
    <functiondecl functionName="luaK_code" lineNumber="789"/>
    <functiondecl functionName="luaK_codeABC" lineNumber="804"/>
    <functiondecl functionName="luaK_codeABx" lineNumber="812"/>
    <functiondecl functionName="luaK_setlist" lineNumber="819"/>
    <functiondecl functionName="isnumeral" lineNumber="30"/>
    <functiondecl functionName="luaK_nil" lineNumber="35"/>
    <functiondecl functionName="luaK_jump" lineNumber="59"/>
    <functiondecl functionName="luaK_ret" lineNumber="69"/>
    <functiondecl functionName="condjump" lineNumber="74"/>
    <functiondecl functionName="fixjump" lineNumber="80"/>
    <functiondecl functionName="luaK_getlabel" lineNumber="94"/>
    <functiondecl functionName="getjump" lineNumber="100"/>
    <functiondecl functionName="getjumpcontrol" lineNumber="109"/>
    <functiondecl functionName="need_value" lineNumber="122"/>
    <functiondecl functionName="patchtestreg" lineNumber="131"/>
    <functiondecl functionName="removevalues" lineNumber="144"/>
    <functiondecl functionName="patchlistaux" lineNumber="150"/>
    <functiondecl functionName="dischargejpc" lineNumber="163"/>
    <functiondecl functionName="luaK_patchlist" lineNumber="169"/>
    <functiondecl functionName="luaK_patchtohere" lineNumber="179"/>
    <functiondecl functionName="luaK_concat" lineNumber="185"/>
    <functiondecl functionName="luaK_checkstack" lineNumber="199"/>
    <functiondecl functionName="luaK_reserveregs" lineNumber="209"/>
    <functiondecl functionName="freereg" lineNumber="215"/>
    <functiondecl functionName="freeexp" lineNumber="223"/>
    <functiondecl functionName="addk" lineNumber="229"/>
    <functiondecl functionName="luaK_stringK" lineNumber="250"/>
    <functiondecl functionName="luaK_numberK" lineNumber="257"/>
    <functiondecl functionName="boolK" lineNumber="264"/>
    <functiondecl functionName="nilK" lineNumber="271"/>
    <functiondecl functionName="luaK_setreturns" lineNumber="280"/>
    <functiondecl functionName="luaK_setoneret" lineNumber="292"/>
    <functiondecl functionName="luaK_dischargevars" lineNumber="304"/>
    <functiondecl functionName="code_label" lineNumber="337"/>
    <functiondecl functionName="discharge2reg" lineNumber="343"/>
    <functiondecl functionName="discharge2anyreg" lineNumber="382"/>
    <functiondecl functionName="exp2reg" lineNumber="390"/>
    <functiondecl functionName="luaK_exp2nextreg" lineNumber="414"/>
    <functiondecl functionName="luaK_exp2anyreg" lineNumber="422"/>
    <functiondecl functionName="luaK_exp2val" lineNumber="436"/>
    <functiondecl functionName="luaK_exp2RK" lineNumber="444"/>
    <functiondecl functionName="luaK_storevar" lineNumber="472"/>
    <functiondecl functionName="luaK_self" lineNumber="503"/>
    <functiondecl functionName="invertjump" lineNumber="516"/>
    <functiondecl functionName="jumponcond" lineNumber="524"/>
    <functiondecl functionName="luaK_goiftrue" lineNumber="539"/>
    <functiondecl functionName="luaK_goiffalse" lineNumber="563"/>
    <functiondecl functionName="codenot" lineNumber="586"/>
    <functiondecl functionName="luaK_indexed" lineNumber="621"/>
    <functiondecl functionName="constfolding" lineNumber="627"/>
    <functiondecl functionName="codearith" lineNumber="653"/>
    <functiondecl functionName="codecomp" lineNumber="673"/>
    <functiondecl functionName="luaK_prefix" lineNumber="689"/>
    <functiondecl functionName="luaK_infix" lineNumber="710"/>
    <functiondecl functionName="luaK_posfix" lineNumber="737"/>
    <functiondecl functionName="luaK_fixline" lineNumber="784"/>
    <functiondecl functionName="luaK_code" lineNumber="789"/>
    <functiondecl functionName="luaK_codeABC" lineNumber="804"/>
    <functiondecl functionName="luaK_codeABx" lineNumber="812"/>
    <functiondecl functionName="luaK_setlist" lineNumber="819"/>
    <functiondecl functionName="isnumeral" lineNumber="30"/>
    <functiondecl functionName="luaK_nil" lineNumber="35"/>
    <functiondecl functionName="luaK_jump" lineNumber="59"/>
    <functiondecl functionName="luaK_ret" lineNumber="69"/>
    <functiondecl functionName="condjump" lineNumber="74"/>
    <functiondecl functionName="fixjump" lineNumber="80"/>
    <functiondecl functionName="luaK_getlabel" lineNumber="94"/>
    <functiondecl functionName="getjump" lineNumber="100"/>
    <functiondecl functionName="getjumpcontrol" lineNumber="109"/>
    <functiondecl functionName="need_value" lineNumber="122"/>
    <functiondecl functionName="patchtestreg" lineNumber="131"/>
    <functiondecl functionName="removevalues" lineNumber="144"/>
    <functiondecl functionName="patchlistaux" lineNumber="150"/>
    <functiondecl functionName="dischargejpc" lineNumber="163"/>
    <functiondecl functionName="luaK_patchlist" lineNumber="169"/>
    <functiondecl functionName="luaK_patchtohere" lineNumber="179"/>
    <functiondecl functionName="luaK_concat" lineNumber="185"/>
    <functiondecl functionName="luaK_checkstack" lineNumber="199"/>
    <functiondecl functionName="luaK_reserveregs" lineNumber="209"/>
    <functiondecl functionName="freereg" lineNumber="215"/>
    <functiondecl functionName="freeexp" lineNumber="223"/>
    <functiondecl functionName="addk" lineNumber="229"/>
    <functiondecl functionName="luaK_stringK" lineNumber="250"/>
    <functiondecl functionName="luaK_numberK" lineNumber="257"/>
    <functiondecl functionName="boolK" lineNumber="264"/>
    <functiondecl functionName="nilK" lineNumber="271"/>
    <functiondecl functionName="luaK_setreturns" lineNumber="280"/>
    <functiondecl functionName="luaK_setoneret" lineNumber="292"/>
    <functiondecl functionName="luaK_dischargevars" lineNumber="304"/>
    <functiondecl functionName="code_label" lineNumber="337"/>
    <functiondecl functionName="discharge2reg" lineNumber="343"/>
    <functiondecl functionName="discharge2anyreg" lineNumber="382"/>
    <functiondecl functionName="exp2reg" lineNumber="390"/>
    <functiondecl functionName="luaK_exp2nextreg" lineNumber="414"/>
    <functiondecl functionName="luaK_exp2anyreg" lineNumber="422"/>
    <functiondecl functionName="luaK_exp2val" lineNumber="436"/>
    <functiondecl functionName="luaK_exp2RK" lineNumber="444"/>
    <functiondecl functionName="luaK_storevar" lineNumber="472"/>
    <functiondecl functionName="luaK_self" lineNumber="503"/>
    <functiondecl functionName="invertjump" lineNumber="516"/>
    <functiondecl functionName="jumponcond" lineNumber="524"/>
    <functiondecl functionName="luaK_goiftrue" lineNumber="539"/>
    <functiondecl functionName="luaK_goiffalse" lineNumber="563"/>
    <functiondecl functionName="codenot" lineNumber="586"/>
    <functiondecl functionName="luaK_indexed" lineNumber="621"/>
    <functiondecl functionName="constfolding" lineNumber="627"/>
    <functiondecl functionName="codearith" lineNumber="653"/>
    <functiondecl functionName="codecomp" lineNumber="673"/>
    <functiondecl functionName="luaK_prefix" lineNumber="689"/>
    <functiondecl functionName="luaK_infix" lineNumber="710"/>
    <functiondecl functionName="luaK_posfix" lineNumber="737"/>
    <functiondecl functionName="luaK_fixline" lineNumber="784"/>
    <functiondecl functionName="luaK_code" lineNumber="789"/>
    <functiondecl functionName="luaK_codeABC" lineNumber="804"/>
    <functiondecl functionName="luaK_codeABx" lineNumber="812"/>
    <functiondecl functionName="luaK_setlist" lineNumber="819"/>
    <functioncall functionName="A"/>
    <functioncall functionName="B"/>
    <functioncall functionName="C"/>
    <functioncall functionName="L"/>
    <functioncall functionName="OPR_ADD"/>
    <functioncall functionName="OPR_AND"/>
    <functioncall functionName="OPR_CONCAT"/>
    <functioncall functionName="OPR_DIV"/>
    <functioncall functionName="OPR_EQ"/>
    <functioncall functionName="OPR_GE"/>
    <functioncall functionName="OPR_GT"/>
    <functioncall functionName="OPR_LE"/>
    <functioncall functionName="OPR_LEN"/>
    <functioncall functionName="OPR_LT"/>
    <functioncall functionName="OPR_MINUS"/>
    <functioncall functionName="OPR_MOD"/>
    <functioncall functionName="OPR_MUL"/>
    <functioncall functionName="OPR_NE"/>
    <functioncall functionName="OPR_NOBINOPR"/>
    <functioncall functionName="OPR_NOT"/>
    <functioncall functionName="OPR_NOUNOPR"/>
    <functioncall functionName="OPR_OR"/>
    <functioncall functionName="OPR_POW"/>
    <functioncall functionName="OPR_SUB"/>
    <functioncall functionName="OP_ADD"/>
    <functioncall functionName="OP_CALL"/>
    <functioncall functionName="OP_CLOSE"/>
    <functioncall functionName="OP_CLOSURE"/>
    <functioncall functionName="OP_CONCAT"/>
    <functioncall functionName="OP_DIV"/>
    <functioncall functionName="OP_EQ"/>
    <functioncall functionName="OP_FORLOOP"/>
    <functioncall functionName="OP_FORPREP"/>
    <functioncall functionName="OP_GETGLOBAL"/>
    <functioncall functionName="OP_GETTABLE"/>
    <functioncall functionName="OP_GETUPVAL"/>
    <functioncall functionName="OP_JMP"/>
    <functioncall functionName="OP_LE"/>
    <functioncall functionName="OP_LEN"/>
    <functioncall functionName="OP_LOADBOOL"/>
    <functioncall functionName="OP_LOADK"/>
    <functioncall functionName="OP_LOADNIL"/>
    <functioncall functionName="OP_LT"/>
    <functioncall functionName="OP_MOD"/>
    <functioncall functionName="OP_MOVE"/>
    <functioncall functionName="OP_MUL"/>
    <functioncall functionName="OP_NEWTABLE"/>
    <functioncall functionName="OP_NOT"/>
    <functioncall functionName="OP_POW"/>
    <functioncall functionName="OP_RETURN"/>
    <functioncall functionName="OP_SELF"/>
    <functioncall functionName="OP_SETGLOBAL"/>
    <functioncall functionName="OP_SETLIST"/>
    <functioncall functionName="OP_SETTABLE"/>
    <functioncall functionName="OP_SETUPVAL"/>
    <functioncall functionName="OP_SUB"/>
    <functioncall functionName="OP_TAILCALL"/>
    <functioncall functionName="OP_TEST"/>
    <functioncall functionName="OP_TESTSET"/>
    <functioncall functionName="OP_TFORLOOP"/>
    <functioncall functionName="OP_UNM"/>
    <functioncall functionName="OP_VARARG"/>
    <functioncall functionName="OpArgK"/>
    <functioncall functionName="OpArgN"/>
    <functioncall functionName="OpArgR"/>
    <functioncall functionName="OpArgU"/>
    <functioncall functionName="OpCode"/>
    <functioncall functionName="TK_BREAK"/>
    <functioncall functionName="TK_CONCAT"/>
    <functioncall functionName="TK_DO"/>
    <functioncall functionName="TK_DOTS"/>
    <functioncall functionName="TK_ELSE"/>
    <functioncall functionName="TK_ELSEIF"/>
    <functioncall functionName="TK_END"/>
    <functioncall functionName="TK_EOS"/>
    <functioncall functionName="TK_EQ"/>
    <functioncall functionName="TK_FALSE"/>
    <functioncall functionName="TK_FOR"/>
    <functioncall functionName="TK_FUNCTION"/>
    <functioncall functionName="TK_GE"/>
    <functioncall functionName="TK_IF"/>
    <functioncall functionName="TK_IN"/>
    <functioncall functionName="TK_LE"/>
    <functioncall functionName="TK_LOCAL"/>
    <functioncall functionName="TK_NAME"/>
    <functioncall functionName="TK_NE"/>
    <functioncall functionName="TK_NIL"/>
    <functioncall functionName="TK_NOT"/>
    <functioncall functionName="TK_NUMBER"/>
    <functioncall functionName="TK_OR"/>
    <functioncall functionName="TK_REPEAT"/>
    <functioncall functionName="TK_RETURN"/>
    <functioncall functionName="TK_STRING"/>
    <functioncall functionName="TK_THEN"/>
    <functioncall functionName="TK_TRUE"/>
    <functioncall functionName="TK_UNTIL"/>
    <functioncall functionName="TK_WHILE"/>
    <functioncall functionName="TM_ADD"/>
    <functioncall functionName="TM_CALL"/>
    <functioncall functionName="TM_CONCAT"/>
    <functioncall functionName="TM_DIV"/>
    <functioncall functionName="TM_EQ"/>
    <functioncall functionName="TM_GC"/>
    <functioncall functionName="TM_INDEX"/>
    <functioncall functionName="TM_LE"/>
    <functioncall functionName="TM_LEN"/>
    <functioncall functionName="TM_LT"/>
    <functioncall functionName="TM_MOD"/>
    <functioncall functionName="TM_MODE"/>
    <functioncall functionName="TM_MUL"/>
    <functioncall functionName="TM_N"/>
    <functioncall functionName="TM_NEWINDEX"/>
    <functioncall functionName="TM_POW"/>
    <functioncall functionName="TM_SUB"/>
    <functioncall functionName="TM_UNM"/>
    <functioncall functionName="VCALL"/>
    <functioncall functionName="VFALSE"/>
    <functioncall functionName="VGLOBAL"/>
    <functioncall functionName="VINDEXED"/>
    <functioncall functionName="VJMP"/>
    <functioncall functionName="VK"/>
    <functioncall functionName="VKNUM"/>
    <functioncall functionName="VLOCAL"/>
    <functioncall functionName="VNIL"/>
    <functioncall functionName="VNONRELOC"/>
    <functioncall functionName="VRELOCABLE"/>
    <functioncall functionName="VTRUE"/>
    <functioncall functionName="VUPVAL"/>
    <functioncall functionName="VVARARG"/>
    <functioncall functionName="VVOID"/>
    <functioncall functionName="a"/>
    <functioncall functionName="abs"/>
    <functioncall functionName="addk"/>
    <functioncall functionName="aux"/>
    <functioncall functionName="b"/>
    <functioncall functionName="base"/>
    <functioncall functionName="bc"/>
    <functioncall functionName="boolK"/>
    <functioncall functionName="break"/>
    <functioncall functionName="c"/>
    <functioncall functionName="char"/>
    <functioncall functionName="code"/>
    <functioncall functionName="code_label"/>
    <functioncall functionName="codearith"/>
    <functioncall functionName="codecomp"/>
    <functioncall functionName="codenot"/>
    <functioncall functionName="cond"/>
    <functioncall functionName="condjump"/>
    <functioncall functionName="constfolding"/>
    <functioncall functionName="default"/>
    <functioncall functionName="discharge2anyreg"/>
    <functioncall functionName="discharge2reg"/>
    <functioncall functionName="dischargejpc"/>
    <functioncall functionName="double"/>
    <functioncall functionName="dtarget"/>
    <functioncall functionName="e"/>
    <functioncall functionName="e1"/>
    <functioncall functionName="e2"/>
    <functioncall functionName="ex"/>
    <functioncall functionName="exp2reg"/>
    <functioncall functionName="f"/>
    <functioncall functionName="final"/>
    <functioncall functionName="first"/>
    <functioncall functionName="fixjump"/>
    <functioncall functionName="fj"/>
    <functioncall functionName="floor"/>
    <functioncall functionName="for"/>
    <functioncall functionName="freeexp"/>
    <functioncall functionName="freereg"/>
    <functioncall functionName="from"/>
    <functioncall functionName="fs"/>
    <functioncall functionName="func"/>
    <functioncall functionName="gc"/>
    <functioncall functionName="getjump"/>
    <functioncall functionName="getjumpcontrol"/>
    <functioncall functionName="h"/>
    <functioncall functionName="i"/>
    <functioncall functionName="iABC"/>
    <functioncall functionName="iABx"/>
    <functioncall functionName="iAsBx"/>
    <functioncall functionName="idx"/>
    <functioncall functionName="ie"/>
    <functioncall functionName="if"/>
    <functioncall functionName="info"/>
    <functioncall functionName="int"/>
    <functioncall functionName="invertjump"/>
    <functioncall functionName="isnumeral"/>
    <functioncall functionName="j"/>
    <functioncall functionName="jpc"/>
    <functioncall functionName="jump"/>
    <functioncall functionName="jumponcond"/>
    <functioncall functionName="k"/>
    <functioncall functionName="key"/>
    <functioncall functionName="l2"/>
    <functioncall functionName="lastline"/>
    <functioncall functionName="lasttarget"/>
    <functioncall functionName="line"/>
    <functioncall functionName="lineinfo"/>
    <functioncall functionName="list"/>
    <functioncall functionName="long"/>
    <functioncall functionName="ls"/>
    <functioncall functionName="luaC_barrierf"/>
    <functioncall functionName="luaH_set"/>
    <functioncall functionName="luaK_checkstack"/>
    <functioncall functionName="luaK_code"/>
    <functioncall functionName="luaK_codeABC"/>
    <functioncall functionName="luaK_codeABx"/>
    <functioncall functionName="luaK_concat"/>
    <functioncall functionName="luaK_dischargevars"/>
    <functioncall functionName="luaK_exp2RK"/>
    <functioncall functionName="luaK_exp2anyreg"/>
    <functioncall functionName="luaK_exp2nextreg"/>
    <functioncall functionName="luaK_exp2val"/>
    <functioncall functionName="luaK_getlabel"/>
    <functioncall functionName="luaK_goiffalse"/>
    <functioncall functionName="luaK_goiftrue"/>
    <functioncall functionName="luaK_jump"/>
    <functioncall functionName="luaK_nil"/>
    <functioncall functionName="luaK_numberK"/>
    <functioncall functionName="luaK_patchtohere"/>
    <functioncall functionName="luaK_reserveregs"/>
    <functioncall functionName="luaK_setoneret"/>
    <functioncall functionName="luaM_growaux_"/>
    <functioncall functionName="luaX_syntaxerror"/>
    <functioncall functionName="lua_atpanic"/>
    <functioncall functionName="lua_call"/>
    <functioncall functionName="lua_checkstack"/>
    <functioncall functionName="lua_close"/>
    <functioncall functionName="lua_concat"/>
    <functioncall functionName="lua_cpcall"/>
    <functioncall functionName="lua_createtable"/>
    <functioncall functionName="lua_dump"/>
    <functioncall functionName="lua_equal"/>
    <functioncall functionName="lua_error"/>
    <functioncall functionName="lua_gc"/>
    <functioncall functionName="lua_getallocf"/>
    <functioncall functionName="lua_getfenv"/>
    <functioncall functionName="lua_getfield"/>
    <functioncall functionName="lua_getmetatable"/>
    <functioncall functionName="lua_gettable"/>
    <functioncall functionName="lua_gettop"/>
    <functioncall functionName="lua_insert"/>
    <functioncall functionName="lua_iscfunction"/>
    <functioncall functionName="lua_isnumber"/>
    <functioncall functionName="lua_isstring"/>
    <functioncall functionName="lua_isuserdata"/>
    <functioncall functionName="lua_lessthan"/>
    <functioncall functionName="lua_load"/>
    <functioncall functionName="lua_next"/>
    <functioncall functionName="lua_objlen"/>
    <functioncall functionName="lua_pcall"/>
    <functioncall functionName="lua_pushboolean"/>
    <functioncall functionName="lua_pushcclosure"/>
    <functioncall functionName="lua_pushinteger"/>
    <functioncall functionName="lua_pushlightuserdata"/>
    <functioncall functionName="lua_pushlstring"/>
    <functioncall functionName="lua_pushnil"/>
    <functioncall functionName="lua_pushnumber"/>
    <functioncall functionName="lua_pushstring"/>
    <functioncall functionName="lua_pushthread"/>
    <functioncall functionName="lua_pushvalue"/>
    <functioncall functionName="lua_rawequal"/>
    <functioncall functionName="lua_rawget"/>
    <functioncall functionName="lua_rawgeti"/>
    <functioncall functionName="lua_rawset"/>
    <functioncall functionName="lua_rawseti"/>
    <functioncall functionName="lua_remove"/>
    <functioncall functionName="lua_replace"/>
    <functioncall functionName="lua_resume"/>
    <functioncall functionName="lua_setfenv"/>
    <functioncall functionName="lua_setfield"/>
    <functioncall functionName="lua_setmetatable"/>
    <functioncall functionName="lua_settable"/>
    <functioncall functionName="lua_settop"/>
    <functioncall functionName="lua_status"/>
    <functioncall functionName="lua_toboolean"/>
    <functioncall functionName="lua_tocfunction"/>
    <functioncall functionName="lua_tointeger"/>
    <functioncall functionName="lua_tonumber"/>
    <functioncall functionName="lua_type"/>
    <functioncall functionName="lua_xmove"/>
    <functioncall functionName="lua_yield"/>
    <functioncall functionName="marked"/>
    <functioncall functionName="maxstacksize"/>
    <functioncall functionName="n"/>
    <functioncall functionName="nactvar"/>
    <functioncall functionName="need_value"/>
    <functioncall functionName="newstack"/>
    <functioncall functionName="next"/>
    <functioncall functionName="nilK"/>
    <functioncall functionName="nk"/>
    <functioncall functionName="node"/>
    <functioncall functionName="nval"/>
    <functioncall functionName="o"/>
    <functioncall functionName="o1"/>
    <functioncall functionName="o2"/>
    <functioncall functionName="offset"/>
    <functioncall functionName="op"/>
    <functioncall functionName="p_f"/>
    <functioncall functionName="p_t"/>
    <functioncall functionName="patchlistaux"/>
    <functioncall functionName="patchtestreg"/>
    <functioncall functionName="pc"/>
    <functioncall functionName="pow"/>
    <functioncall functionName="r"/>
    <functioncall functionName="reg"/>
    <functioncall functionName="removevalues"/>
    <functioncall functionName="return"/>
    <functioncall functionName="s"/>
    <functioncall functionName="sizecode"/>
    <functioncall functionName="sizek"/>
    <functioncall functionName="sizelineinfo"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="switch"/>
    <functioncall functionName="t"/>
    <functioncall functionName="target"/>
    <functioncall functionName="temp"/>
    <functioncall functionName="tostore"/>
    <functioncall functionName="tt"/>
    <functioncall functionName="v"/>
    <functioncall functionName="v1"/>
    <functioncall functionName="v2"/>
    <functioncall functionName="value"/>
    <functioncall functionName="void"/>
    <functioncall functionName="vtarget"/>
    <functioncall functionName="while"/>
  </FileInfo>
</analyzerinfo>
